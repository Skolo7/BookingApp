name: Lint

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PYTHON_VERSION: '3.13'

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Code Quality & Linting

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.otputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependnecies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --with dev

    - name: Run Ruff
      run: poetry run ruff check .

    - name: Run bandit
      run: poetry run bandit -r booking_app -x tests/

    - name: Run Safety
      run: |
        poetry run safety check
      continue-on-error: true

    - name: Run mypy
      run: poetry run mypy booking_app
      continue-on-error: true # to remove in the future.
