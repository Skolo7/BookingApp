services:
  web:
    build: .
    command: python booking_app/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: django_celery_example_celery_worker
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    image: django_celery_example_celery_beat
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    image: django_celery_example_celery_flower
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - 5557:5555
    depends_on:
      - redis
      - db

volumes:
  postgres_data: